SELECT DISTINCT CASE
            WHEN (SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'Python')) AND
                    (SKILL_CODE & (SELECT BIT_OR(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End')) > 0 THEN 'A'
            WHEN (SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'C#')) THEN 'B'
            WHEN (SKILL_CODE & (SELECT BIT_OR(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End')) > 0 THEN 'C'
        END AS GRADE, 
        ID, EMAIL
    FROM DEVELOPERS D
    JOIN SKILLCODES S
      ON D.SKILL_CODE & S.CODE
    HAVING GRADE IS NOT NULL
    ORDER BY 1, 2



















# SELECT
#         CASE
#             WHEN (SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'Python')) > 0 
#                 AND (SKILL_CODE & (SELECT BIT_OR(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End')) > 0 THEN 'A'
#             WHEN (SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'C#')) > 0 THEN 'B'
#             WHEN (SKILL_CODE & (SELECT BIT_OR(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End')) > 0 THEN 'C'
#             ELSE NULL
#         END AS GRADE,
#         ID,
#         EMAIL
#     FROM DEVELOPERS
#     HAVING GRADE IS NOT NULL
#     ORDER BY 1, 2;